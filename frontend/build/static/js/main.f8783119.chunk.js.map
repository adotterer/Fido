{"version":3,"sources":["context/Modal.js","store/csrf.js","store/session.js","components/SignupFormPage/index.js","components/Navigation/ProfileButton.js","components/LoginFormModal/LoginForm.js","components/LoginFormModal/index.js","components/Navigation/index.js","components/ChatRoom/Home.js","components/ChatRoom/MessageCore.js","components/ChatRoom/index.js","components/UserList.js","components/GoogleMap/index.js","components/NearbyUsers/index.js","components/GreetingPage/index.js","App.js","store/index.js","index.js","components/ChatRoom/MessageCore.module.css"],"names":["ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","useState","value","setValue","useEffect","current","Provider","ref","Modal","onClose","modalNode","useContext","ReactDOM","createPortal","id","onClick","fetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","res","contentType","includes","json","data","status","SET_USER","REMOVE_USER","setUser","user","type","payload","login","credential","password","dispatch","body","JSON","stringify","initialState","reducer","state","action","Object","assign","SignupFormPage","useDispatch","sessionUser","useSelector","session","email","setEmail","username","setUsername","setPassword","confirmPassword","setConfirmPassword","location","setLocation","phoneNumber","setPhoneNumber","firstName","setFirstName","lastName","setLastName","errors","setErrors","to","onSubmit","e","preventDefault","response","catch","map","error","idx","onChange","target","placeholder","required","ProfileButton","showMenu","setShowMenu","closeMenu","document","addEventListener","removeEventListener","className","LoginForm","setCredential","credentialEl","passwordEl","sessionActions","demoUsername","split","forEach","letter","index","setTimeout","LoginFormModal","showModal","setShowModal","Navigation","sessionLinks","isLoaded","class","exact","style","fontSize","paddingRight","ValidationErrors","length","Home","updatePersonName","setUserName","display","flexDirection","justifyContent","errorsToSet","push","MessageCore","messageSession","sendChat","msg","setMsg","messages","console","log","m","name","text","personsName","short","PersonsNames","person1","person2","styles","persons","individual_message_right","individual_message_left","person_name","nanoid","announcement","ChatRoom","userId","useParams","setMessageSession","webSocket","ws","WebSocket","process","onopen","sendMessage","onmessage","message","parse","Error","onerror","onclose","send","close","backgroundColor","width","playAgain","quit","createChatRoom","UserList","users","history","useHistory","createChatRoomEvent","chatRoomNumber","chatRoomId","event","Pin","props","pinUser","color","SimpleMap","center","nearbyUsers","mappedUsers","UserDetail","lat","liveLocationLat","lng","liveLocationLng","height","bootstrapURLKeys","key","GOOGLE_API_SECRET","defaultZoom","getNearbyUsersMyLocation","NearbyUsers","locationInfo","setLocationInfo","setCenter","currentLocation","GreetingPage","LogInSignUpBlock","App","enhancer","setIsLoaded","then","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f8783119.chunk.js","sourcesContent":["import React, { useContext, useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [value, setValue] = useState();\n\n  useEffect(() => {\n    setValue(modalRef.current);\n  }, [])\n\n  return (\n    <>\n      <ModalContext.Provider value={value}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal({ onClose, children }) {\n  const modalNode = useContext(ModalContext);\n  if (!modalNode) return null;\n\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={onClose} />\n      <div id=\"modal-content\">\n        {children}\n      </div>\n    </div>,\n    modalNode\n  );\n}","import Cookies from \"js-cookie\";\n\nexport async function fetch(url, options = {}) {\n  // set options.method to 'GET' if there is no method\n  options.method = options.method || \"GET\";\n  // set options.headers to an empty object if there is no headers\n  options.headers = options.headers || {};\n\n  // if the options.method is not 'GET', then set the \"Content-Type\" header to\n  // \"application/json\", and set the \"CSRF-TOKEN\" header to the value of the\n  // \"XSRF-TOKEN\" cookie\n  if (options.method.toUpperCase() !== \"GET\") {\n    options.headers[\"Content-Type\"] =\n      options.headers[\"Content-Type\"] || \"application/json\";\n    options.headers[\"XSRF-Token\"] = Cookies.get(\"XSRF-TOKEN\");\n  }\n  // call the default window's fetch with the url and the options passed in\n  const res = await window.fetch(url, options);\n\n  // if the response's body is JSON, then parse the JSON body and set it to a\n  // key of `data` on the response\n  const contentType = res.headers.get(\"content-type\");\n  if (contentType && contentType.includes(\"application/json\")) {\n    const data = await res.json();\n    res.data = data;\n  }\n\n  // if the response status code is 400 or above, then throw an error with the\n  // error being the response\n  if (res.status >= 400) throw res;\n\n  // if the response status code is under 400, then return the response to the\n  // next promise chain\n  return res;\n}\n\nexport function restoreCSRF() {\n  return fetch(\"/api/csrf/restore\");\n}\n","import { fetch } from \"./csrf.js\";\n\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user,\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n});\n\nexport const login = ({ credential, password }) => async (dispatch) => {\n  const res = await fetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  dispatch(setUser(res.data.user));\n  return res;\n};\n\nexport const restoreUser = () => async (dispatch) => {\n  const res = await fetch(\"/api/session\");\n  dispatch(setUser(res.data.user));\n  return res;\n};\n\nexport const signup = (user) => async (dispatch) => {\n  const {\n    username,\n    email,\n    password,\n    location,\n    phoneNumber,\n    firstName,\n    lastName,\n  } = user;\n  \n  const response = await fetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n      location,\n      phoneNumber,\n      firstName,\n      lastName,\n    }),\n  });\n\n  dispatch(setUser(response.data.user));\n  return response;\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch(\"/api/session\", {\n    method: \"DELETE\",\n  });\n  dispatch(removeUser());\n  return response;\n};\n\nconst initialState = { user: null };\n\nfunction reducer(state = initialState, action) {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state, { user: action.payload });\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state, { user: null });\n      return newState;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(\n        sessionActions.signup({\n          email,\n          username,\n          password,\n          location,\n          phoneNumber,\n          firstName,\n          lastName,\n        })\n      ).catch((res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n    }\n    return setErrors([\n      \"Confirm Password field must be the same as the Password field\",\n    ]);\n  };\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <div>\n          <label>\n            Email\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"required\"\n              required\n            />\n          </label>\n          <label>\n            Username\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder=\"required\"\n              required\n            />\n          </label>\n          <label>\n            Password\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"required\"\n              required\n            />\n          </label>\n          <label>\n            Confirm Password\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"required\"\n              required\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Location\n            <input\n              type=\"text\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n              placeholder=\"your neighborhood\"\n              placeholder=\"required\"\n              required\n            />\n          </label>\n          <label>\n            First Name\n            <input\n              type=\"text\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              placeholder=\"required\"\n              required\n            />\n          </label>\n          <label>\n            Last Name\n            <input\n              type=\"text\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              placeholder=\"optional\"\n            />\n          </label>\n          <label>\n            Phone Number\n            <input\n              type=\"tel\"\n              value={phoneNumber}\n              onChange={(e) => setPhoneNumber(e.target.value)}\n              placeholder=\"optional\"\n            />\n          </label>\n          <button type=\"submit\">Sign Up</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default SignupFormPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as sessionActions from \"../../store/session\";\nimport { FaUserAlt } from \"react-icons/fa\";\n// FaUserAlt\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n\n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n\n    document.addEventListener(\"click\", closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n  };\n\n  return (\n    <>\n      <FaUserAlt onClick={openMenu} />\n      {/* <button onClick={openMenu}>\n        <i className=\"fas fa-user-circle\" />\n      </button> */}\n      {showMenu && (\n        <ul className=\"profile-dropdown\">\n          <li>{user.username}</li>\n          <li>{user.email}</li>\n          <li>\n            <button onClick={logout}>Log Out</button>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ProfileButton;\n","import React, { useState, useRef } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport \"./LoginForm.css\";\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n  const [credential, setCredential] = useState(\"\");\n  const credentialEl = useRef(null);\n  const passwordEl = useRef(null);\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password })).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n  };\n\n  const demoLogin1 = (e) => {\n    e.preventDefault();\n    const demoUsername = \"demo@user.io\";\n    const demoPassword = [\"p\", \"a\", \"s\", \"s\", \"w\", \"o\", \"r\", \"d\"];\n\n    demoUsername.split(\"\").forEach((letter, index) => {\n      setTimeout(() => (credentialEl.current.value += letter), 150 * index);\n      setCredential(credentialEl.current.value);\n    });\n\n    demoPassword.forEach((letter, index) => {\n      setTimeout(() => (passwordEl.current.value += letter), 150 * index);\n    });\n\n    setTimeout(() => {\n      dispatch(\n        sessionActions.login({\n          credential: demoUsername,\n          password: \"password\",\n        })\n      ).catch((res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n    }, 1800);\n  };\n\n  const demoLogin2 = (e) => {\n    e.preventDefault();\n    const demoUsername = \"Barbie\";\n    const demoPassword = [\"p\", \"a\", \"s\", \"s\", \"w\", \"o\", \"r\", \"d\"];\n\n    demoUsername.split(\"\").forEach((letter, index) => {\n      setTimeout(() => (credentialEl.current.value += letter), 150 * index);\n      setCredential(credentialEl.current.value);\n    });\n\n    demoPassword.forEach((letter, index) => {\n      setTimeout(() => (passwordEl.current.value += letter), 150 * index);\n    });\n\n    setTimeout(() => {\n      dispatch(\n        sessionActions.login({\n          credential: demoUsername,\n          password: \"password\",\n        })\n      ).catch((res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n    }, 1800);\n  };\n\n  return (\n    <>\n      <h1>Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          Username or Email\n          <input\n            ref={credentialEl}\n            type=\"text\"\n            value={credential}\n            onChange={(e) => setCredential(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            ref={passwordEl}\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Log In</button>\n        <div className=\"div__demoLogin\">\n          <button className=\"button__demoLogin\" onClick={demoLogin1}>\n            Demo User 1\n          </button>\n          <button className=\"button__demoLogin\" onClick={demoLogin2}>\n            Demo User 2\n          </button>\n        </div>\n        {/* <button action={}>Demo Use r 2</button> */}\n      </form>\n    </>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Modal } from '../../context/Modal';\nimport LoginForm from './LoginForm';\n\nfunction LoginFormModal() {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <button onClick={() => setShowModal(true)}>Log In</button>\n      {showModal && (\n        <Modal onClose={() => setShowModal(false)}>\n          <LoginForm />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default LoginFormModal;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ProfileButton from \"./ProfileButton\";\nimport LoginFormModal from \"../LoginFormModal\";\nimport { GiDogHouse } from \"react-icons/gi\";\nimport { IoIosChatbubbles } from \"react-icons/io\";\nimport \"./Navigation.css\";\n\nfunction Navigation({ isLoaded }) {\n  const sessionUser = useSelector((state) => state.session.user);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = (\n      <>\n        <li class=\"li__buttonIcons\">\n          <ProfileButton user={sessionUser} />\n        </li>\n        <NavLink exact to=\"/users/all\">\n          <li class=\"li__buttonIcons\">\n            <IoIosChatbubbles />\n          </li>\n        </NavLink>\n      </>\n    );\n  } else {\n    sessionLinks = (\n      <>\n        <li>\n          <LoginFormModal />\n        </li>\n        <li>\n          <NavLink to=\"/signup\">Sign Up</NavLink>\n        </li>\n      </>\n    );\n  }\n\n  return (\n    <div id=\"div__nav-bar\">\n      <NavLink exact to=\"/\">\n        <div class=\"div__logo\">\n          <GiDogHouse style={{ fontSize: \"1.4em\", paddingRight: \"0.4em\" }} />\n          {/* Fido411 / FidoApp / */}FidoApp\n        </div>\n      </NavLink>\n      <div class=\"div__navIcons\">\n        <ul class=\"ul__navIcons\">{isLoaded && sessionLinks}</ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from \"react\";\n\nconst ValidationErrors = ({ errors }) => {\n  if (errors === null || errors.length === 0) {\n    return null;\n  }\n\n  return (\n    <div>\n      <p>Please correct the following errors:</p>\n      <ul>\n        {errors.map((error) => (\n          <li key={error}>{error}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst Home = ({ updatePersonName }) => {\n  const [username, setUserName] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const onChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const errorsToSet = [];\n\n    if (!username) {\n      errorsToSet.push(\"Please provide a name.\");\n    }\n\n    if (errorsToSet.length > 0) {\n      setErrors(errorsToSet);\n      return;\n    }\n\n    updatePersonName(username);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <h2>Welcome!</h2>\n      <p>\n        Please provide your name and click the \"Start MessageSession\" button to\n        start a messageSession.\n      </p>\n      <ValidationErrors errors={errors} />\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={username} onChange={onChange} />\n        <button>Start MessageSession</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport styles from \"./MessageCore.module.css\";\n\nconst MessageCore = ({ username, messageSession, sendChat }) => {\n  const [msg, setMsg] = useState(\"\");\n  useEffect(() => {\n    if (messageSession && messageSession.messages) {\n      console.log(\n        \"messageSession.messages\",\n        messageSession.messages,\n        messageSession.messages.map((m) => [m.name, m.text])\n      );\n    }\n  }, [messageSession]);\n\n  const handleChatSubmit = (e) => {\n    e.preventDefault();\n    sendChat(msg, username);\n    setMsg(\"\");\n  };\n\n  const personsName = (name, short = false) =>\n    name === username ? (short ? \"Me\" : `Me (${name})`) : name;\n  const PersonsNames = () => {\n    return messageSession.person1.username === username ? (\n      <>\n        <div>{personsName(messageSession.person2.username)}</div>\n        <div>{personsName(messageSession.person1.username)}</div>\n      </>\n    ) : (\n      <>\n        <div>{personsName(messageSession.person1.username)}</div>\n        <div>{personsName(messageSession.person2.username)}</div>\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.messageSession}>\n      {messageSession ? (\n        <>\n          <div className={styles.persons}>\n            <PersonsNames />\n          </div>\n          {messageSession.messages && (\n            <div>\n              <div>\n                {messageSession.messages.map((m) => (\n                  <p\n                    key={nanoid()}\n                    className={\n                      m.username === username\n                        ? styles.individual_message_right\n                        : styles.individual_message_left\n                    }\n                  >\n                    <span className={styles.person_name}>\n                      <b>{personsName(m.username, true)}</b>\n                    </span>\n                    <span>{m.msg}</span>\n                  </p>\n                ))}\n              </div>\n              <form onSubmit={handleChatSubmit}>\n                <input\n                  type=\"text\"\n                  value={msg}\n                  onChange={(e) => setMsg(e.target.value)}\n                  placeholder=\"Enter a message\"\n                />\n                <button type=\"submit\">Send</button>\n              </form>\n            </div>\n          )}\n        </>\n      ) : (\n        <h3 className={styles.announcement}>\n          Waiting for another person to join the chat...\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default MessageCore;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Home from \"./Home\";\nimport MessageCore from \"./MessageCore\";\n// import { fetch } from \"../../store/csrf.js\";\nimport { useParams } from \"react-router-dom\";\n\n// const userOnlineStatusById = async (id) => {\n//   const res = await fetch(`/api/chat/salmon`);\n//   // const friendStatus = await res.json();\n//   console.log(res.data);\n//   return res.data;\n// };\n\nconst ChatRoom = () => {\n  const { userId } = useParams();\n  console.log(userId);\n\n  // SESSION USER\n  const sessionUser = useSelector((state) => state.session.user);\n\n  // useEffect(async () => {\n  //   if (sessionUser) {\n  //     // let bubblebop = await userOnlineStatusById(2);\n  //     console.log(\"this is sessionUser\", userId);\n  //     // console.log(\"helloooo\", userOnlineStatusById(2));\n  //   }\n  // }, [sessionUser]);\n\n  const [username, setUserName] = useState(sessionUser.username);\n  const [messageSession, setMessageSession] = useState(null);\n  const webSocket = useRef(null);\n\n  useEffect(() => {\n    if (!username) {\n      return;\n    }\n\n    const ws = new WebSocket(process.env.REACT_APP_WS_URL);\n\n    ws.onopen = () => {\n      sendMessage(\"add-new-person\", { username });\n    };\n\n    ws.onmessage = (e) => {\n      console.log(`Processing incoming message ${e.data}...`);\n\n      const message = JSON.parse(e.data);\n\n      switch (message.type) {\n        case \"start-message-session\":\n        case \"update-message-session\":\n        case \"end-message-session\":\n          setMessageSession(message.data);\n          break;\n        default:\n          throw new Error(`Unknown message type: ${message.type}`);\n      }\n    };\n\n    ws.onerror = (e) => {\n      console.error(e);\n    };\n\n    ws.onclose = (e) => {\n      console.log(`Connection closed: ${e}`);\n      webSocket.current = null;\n      setUserName(\"\");\n      setMessageSession(null);\n    };\n\n    const sendMessage = (type, data) => {\n      const message = JSON.stringify({\n        type,\n        data,\n      });\n\n      console.log(`Sending message ${message}...`);\n\n      ws.send(message);\n    };\n\n    webSocket.current = {\n      ws,\n      sendMessage,\n    };\n\n    return function cleanup() {\n      if (webSocket.current !== null) {\n        webSocket.current.ws.close();\n      }\n    };\n  }, [username]);\n\n  const updatePersonName = (username) => {\n    setUserName(username);\n  };\n\n  const sendChat = (msg, username) => {\n    webSocket.current.sendMessage(\"chat-message\", { username, msg });\n  };\n\n  const playAgain = (username) => {\n    setMessageSession(null);\n    webSocket.current.sendMessage(\"add-new-person\", { username });\n  };\n\n  const quit = () => {\n    setUserName(\"\");\n  };\n\n  const backgroundColor = () => {\n    if (messageSession) {\n      if (username === messageSession.person1.username) {\n        return \"lightblue\";\n      } else {\n        return \"lightgreen\";\n      }\n    } else {\n      return \"lightgray\";\n    }\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: backgroundColor(),\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        width: \"500px\",\n      }}\n    >\n      <h1>Minimum Instant Messenger </h1>\n      <h2>With JS and WebSocket</h2>\n      {username ? (\n        <MessageCore\n          username={username}\n          messageSession={messageSession}\n          playAgain={playAgain}\n          quit={quit}\n          sendChat={sendChat}\n        />\n      ) : (\n        <Home updatePersonName={updatePersonName} />\n      )}\n    </div>\n  );\n};\n\nexport default ChatRoom;\n","import React, { useState, useEffect } from \"react\";\nimport { fetch } from \"../store/csrf.js\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { json } from \"body-parser\";\n\nasync function createChatRoom(sessionUser, user) {\n  const res = await fetch(\n    `/api/chatroom/add?sessionUserId=${sessionUser.id}&&otherUserId=${user.id}&&sessionUsername=${sessionUser.username}&&otherUsername=${user.username}`\n  );\n  // console.log(res);\n  return res;\n}\n\nfunction UserList(users) {\n  const history = useHistory();\n  const sessionUser = useSelector((state) => state.session.user);\n\n  const createChatRoomEvent = async (e, sessionUser, user) => {\n    e.preventDefault();\n    try {\n      const res = await createChatRoom(sessionUser, user);\n      // const jsonparse = JSON.parse(res);\n      const chatRoomNumber = res.data.chatRoomId;\n      // console.log(\"JSONPARSE\", jsonparse);\n      history.push(`/chatroom/${chatRoomNumber}`);\n    } catch (e) {\n      console.error(\"FAILED TO GET CHAT ROOM NUMBER\");\n    }\n  };\n\n  return (\n    <>\n      {users[0] &&\n        sessionUser &&\n        users.map((user) => {\n          return (\n            <div key={user.id}>\n              <Link\n                key={user.id}\n                onClick={(e) => createChatRoomEvent(e, sessionUser, user)}\n              >\n                {user.username}\n              </Link>\n            </div>\n          );\n        })}\n    </>\n  );\n}\n\nexport default UserList;\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport UserList from \"../UserList\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { GiSittingDog } from \"react-icons/gi\";\n\n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst createChatRoom = async (sessionUser, user) => {\n  const res = await fetch(\n    `/api/chatroom/add?sessionUserId=${sessionUser.id}&&otherUserId=${user.id}&&sessionUsername=${sessionUser.username}&&otherUsername=${user.username}`\n  );\n  console.log(\"this is res\", res);\n  return await res.json();\n};\nconst createChatRoomEvent = async (event, sessionUser, user) => {\n  // console.log(user, \"this is user!!\");\n  try {\n    const res = await createChatRoom(sessionUser, user);\n    // const jsonparse = JSON.parse(res);\n    const chatRoomNumber = res.chatRoomId;\n    // console.log(\"JSONPARSE\", jsonparse);\n    return chatRoomNumber;\n    // history.push(`/chatroom/${chatRoomNumber}`);\n  } catch (e) {\n    console.error(\"FAILED TO GET CHAT ROOM NUMBER\");\n  }\n};\n\nfunction Pin(props) {\n  const history = useHistory();\n  // console.log(\"pin\", props);\n  return (\n    <Link\n      key={props.pinUser.id}\n      onClick={async (event) => {\n        event.preventDefault();\n        const chatRoomNumber = await createChatRoomEvent(\n          event,\n          props.sessionUser,\n          props.pinUser\n        );\n        console.log(chatRoomNumber);\n        return history.push(`/chatroom/${chatRoomNumber}`);\n      }}\n    >\n      <GiSittingDog style={{ color: \"black\", fontSize: \"3em\" }} />\n    </Link>\n  );\n}\n\nfunction SimpleMap({ center, nearbyUsers }) {\n  const history = useHistory();\n  const sessionUser = useSelector((state) => state.session.user);\n  const mappedUsers = nearbyUsers.map((user) => {\n    const {\n      UserDetail: { liveLocationLat: lat, liveLocationLng: lng },\n      username,\n      id,\n    } = user;\n\n    return { id, username, lat, lng };\n  });\n\n  return (\n    // Important! Always set the container height explicitly\n    <div style={{ height: \"80vh\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.GOOGLE_API_SECRET }}\n        // defaultCenter={center}\n        center={center}\n        defaultZoom={12}\n      >\n        {mappedUsers.length > 0 &&\n          mappedUsers.map((user) => {\n            console.log(\"map user\", user);\n            return (\n              <Pin\n                sessionUser={sessionUser}\n                pinUser={user}\n                lat={user.lat}\n                lng={user.lng}\n              />\n            );\n          })}\n      </GoogleMapReact>\n    </div>\n  );\n}\n\nexport default SimpleMap;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetch } from \"../../store/csrf.js\";\nimport UserList from \"../UserList\";\nimport SimpleMap from \"../GoogleMap\";\n\nasync function getNearbyUsersMyLocation(sessionUser) {\n  const res = await fetch(`/api/users/nearby?userId=${sessionUser.id}`);\n\n  const nearbyUsers = res.data;\n  console.log(nearbyUsers);\n  return nearbyUsers;\n}\n\nfunction NearbyUsers() {\n  const [locationInfo, setLocationInfo] = useState([]);\n  const sessionUser = useSelector((state) => state.session.user);\n  const [center, setCenter] = useState();\n\n  useEffect(async () => {\n    setLocationInfo(await getNearbyUsersMyLocation(sessionUser));\n  }, [sessionUser]);\n\n  useEffect(async () => {\n    console.log(locationInfo.currentLocation);\n    setCenter(locationInfo.currentLocation);\n  }, [locationInfo]);\n\n  return (\n    <div>\n      <h1>Here are nearby users: </h1>\n\n      {locationInfo.currentLocation ? (\n        <SimpleMap\n          center={locationInfo.currentLocation}\n          nearbyUsers={locationInfo.nearbyUsers}\n        />\n      ) : (\n        \"no center\"\n      )}\n    </div>\n  );\n}\n\nexport default NearbyUsers;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetch } from \"../../store/csrf.js\";\nimport \"./Greeting.css\";\nimport LoginFormModal from \"../LoginFormModal\";\nimport { Link } from \"react-router-dom\";\nimport NearbyUsers from \"../NearbyUsers\";\n\nfunction GreetingPage() {\n  const sessionUser = useSelector((state) => state.session.user);\n\n  function LogInSignUpBlock() {\n    let loginBlock;\n    if (!sessionUser) {\n      return (\n        <div class=\"div__LogInSignUpBlock\">\n          <div>\n            Please log in or sign up to start chatting with dog owners near you.\n          </div>\n          <div>\n            <LoginFormModal />\n          </div>\n          <Link to=\"/signup\">\n            <div>\n              <button>Sign up</button>\n            </div>\n          </Link>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n  return (\n    <div>\n      <div class=\"div__greetingPage\">\n        {/* <h1>GreetingPage</h1> */}\n        <LogInSignUpBlock />\n      </div>\n      {sessionUser && <NearbyUsers />}\n    </div>\n  );\n}\n\nexport default GreetingPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n// import LoginFormPage from \"./components/LoginFormPage\";\nimport * as sessionActions from \"./store/session\";\nimport SignupFormPage from \"./components/SignupFormPage/index.js\";\nimport Navigation from \"./components/Navigation\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport UserList from \"./components/UserList\";\nimport GreetingPage from \"./components/GreetingPage\";\nimport NearbyUsers from \"./components/NearbyUsers\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <div id=\"div__bodyContent\">\n          <div id=\"div__innerContent\">\n            <Switch>\n              {/* <Route path=\"/login\" >\n            <LoginFormPage />\n          </Route> */}\n              <Route exact path=\"/\">\n                <GreetingPage />\n              </Route>\n              <Route path=\"/signup\">\n                <SignupFormPage />\n              </Route>\n              <Route exact path=\"/chat\">\n                <ChatRoom />\n              </Route>\n              <Route path=\"/users/all\">\n                <UserList />\n              </Route>\n              <Route exact path=\"/chatroom/:userId\">\n                <ChatRoom />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session'\n\nconst rootReducer = combineReducers({\n  session\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from \"react\";\nimport \"./index.css\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ModalProvider } from \"./context/Modal\";\nimport App from \"./App\";\n\nimport configureStore from \"./store\";\nimport { restoreCSRF, fetch } from \"./store/csrf\";\nimport * as sessionActions from \"./store/session\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\n// const Carrot = () => (\n//   <div style={{ color: \"orange\", fontSize: \"100px\" }}>\n//     <i className=\"fas fa-carrot\"></i>\n//   </div>\n// );\n\nfunction Root() {\n  return (\n    <ModalProvider>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n          {/* <Carrot /> */}\n        </BrowserRouter>\n      </Provider>\n    </ModalProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageSession\":\"MessageCore_messageSession__r2Pwt\",\"persons\":\"MessageCore_persons__3GRcJ\",\"actions\":\"MessageCore_actions__LBLdD\",\"announcement\":\"MessageCore_announcement__wGc2e\",\"individual_message_right\":\"MessageCore_individual_message_right__1TX3q\",\"individual_message_left\":\"MessageCore_individual_message_left__1UAWb\",\"person_name\":\"MessageCore_person_name__3qwNK\"};"],"sourceRoot":""}